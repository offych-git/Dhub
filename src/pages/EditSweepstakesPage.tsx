
import React, { useState, useEffect } from 'react';
import { useNavigate, useParams, useLocation } from 'react-router-dom';
import AddSweepstakesPage from './AddSweepstakesPage';
import { supabase } from '../lib/supabase';
import { ArrowLeft } from 'lucide-react';
import { useGlobalState } from '../contexts/GlobalStateContext';
import { useAdmin } from '../hooks/useAdmin';
import { useModeration } from '../contexts/ModerationContext';

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
const DEBUG_EDIT_SWEEPSTAKES = true;

const EditSweepstakesPage: React.FC = () => {
  const navigate = useNavigate();
  const { id } = useParams<{ id: string }>();
  const location = useLocation();
  const [sweepstakesData, setSweepstakesData] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { refreshDeals } = useGlobalState();
  const { role } = useAdmin();
  const { addToModerationQueue } = useModeration();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleAddToModeration = async (sweepstakesId: string) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ ID —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (location.pathname.indexOf('moderation') === -1 && sweepstakesId) {
      console.log("EditSweepstakesPage: –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à –≤ –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏, ID:", sweepstakesId);

      try {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞ pending
        await supabase
          .from('deals')
          .update({ status: 'pending' })
          .eq('id', sweepstakesId)
          .eq('type', 'sweepstakes');

        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        if (addToModerationQueue) {
          const result = await addToModerationQueue(sweepstakesId, 'sweepstake');
          console.log("EditSweepstakesPage: —Ä–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏");
          console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏:", result);
        } else {
          console.error("EditSweepstakesPage: —Ñ—É–Ω–∫—Ü–∏—è addToModerationQueue –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞");
        }
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏:", e);
      }
    }
  };

  useEffect(() => {
    if (DEBUG_EDIT_SWEEPSTAKES) {
      console.log('üîç EditSweepstakesPage –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      console.log('üîç URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ:', window.location.href);
      console.log('üîç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å:', location.pathname);
      console.log('üîç ID —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', id);
    }
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–µ—à–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (id) {
      // –û—á–∏—â–∞–µ–º –∫–µ—à —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      localStorage.removeItem(`form_sweepstake_edit_${id}`);
      // –û—á–∏—â–∞–µ–º –∫–µ—à –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
      localStorage.removeItem('form_sweepstake_new');
      console.log('üßπ –ö–µ—à –¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—á–∏—â–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö');
    }

    const loadSweepstakesData = async () => {
      try {
        if (!id) {
          setError('ID —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
          setLoading(false);
          return;
        }

        // –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
        console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞...');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞, —É—Ç–æ—á–Ω—è—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø 'sweepstakes'
        const { data, error } = await supabase
          .from('deals')
          .select(`
            *,
            profiles:user_id(id, email, display_name)
          `)
          .eq('id', id)
          .eq('type', 'sweepstakes') // –£—Ç–æ—á–Ω—è–µ–º, —á—Ç–æ –Ω—É–∂–µ–Ω —Ä–æ–∑—ã–≥—Ä—ã—à
          .maybeSingle();

        if (error) {
          console.error('üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞:', error);
          throw error;
        }

        if (!data) {
          console.error('üî¥ –û—à–∏–±–∫–∞: —Ä–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω');
          setError('–†–æ–∑—ã–≥—Ä—ã—à –Ω–µ –Ω–∞–π–¥–µ–Ω');
          setLoading(false);
          return;
        }

        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data);

        // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è AddSweepstakesPage
        const sweepstakeFullData = {
          id: data.id,
          title: data.title,
          description: data.description,
          dealUrl: data.deal_url,
          expiryDate: data.expires_at || '',
          image: data.image_url,
          isHot: !!data.is_hot
        };

        setSweepstakesData(sweepstakeFullData);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫
        localStorage.setItem(`form_sweepstake_edit_${id}`, JSON.stringify(sweepstakeFullData));

      } catch (err: any) {
        console.error('üî¥ –û—à–∏–±–∫–∞:', err);
        setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞');
      } finally {
        setLoading(false);
      }
    };

    loadSweepstakesData();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ
    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        refreshDeals();
      }
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);

    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
  }, [id, location, refreshDeals]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-900 flex flex-col justify-center items-center">
        <div className="h-8 w-8 border-4 border-orange-500 border-t-transparent rounded-full animate-spin mb-4"></div>
        <p className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-900 flex flex-col">
        <div className="fixed top-0 left-0 right-0 bg-gray-900 border-b border-gray-800 px-4 py-3 z-10">
          <div className="flex items-center">
            <button onClick={() => navigate(-1)} className="text-white">
              <ArrowLeft className="h-6 w-6" />
            </button>
            <h1 className="text-white text-lg font-medium ml-4">–û—à–∏–±–∫–∞</h1>
          </div>
        </div>
        <div className="flex-1 pt-16 px-4">
          <div className="bg-red-500/10 text-red-500 p-4 rounded-md">
            {error}
          </div>
        </div>
      </div>
    );
  }

  return (
    <AddSweepstakesPage
      isEditing={true}
      sweepstakesId={id}
      initialData={sweepstakesData}
      allowHotToggle={role === 'admin' || role === 'moderator'}
      labelOverrides={{ 
        submitButton: '–û–±–Ω–æ–≤–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à',
        pageTitle: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞'
      }}
      onEditSuccess={handleAddToModeration}
    />
  );
};

export default EditSweepstakesPage;
