// PrimeDay.tsx
import React, { useState, useEffect, useCallback } from 'react';
import { useAuth } from '../contexts/AuthContext'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É AuthContext –≤–µ—Ä–Ω—ã–π
import { supabase } from '../lib/supabase'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É supabase –∫–ª–∏–µ–Ω—Ç—É –≤–µ—Ä–Ω—ã–π
import { FaPlus, FaCheck, FaSpinner, FaHandPointer, FaRocket } from 'react-icons/fa';

// --- –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö ---
interface Subscription {
  id: string;
  keyword: string;
}

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ ---
const productData = {
    "üî• –ì–ª–∞–≤–Ω—ã–µ –•–∏—Ç—ã Prime Day": ["iPhone", "Apple Watch", "Apple Airpods", "Labubu", "PS5 Pro", "Dyson –ø—ã–ª–µ—Å–æ—Å", "Dyson airwrap", "Nintendo Switch", "–Ω–∞—É—à–Ω–∏–∫–∏ Sony", "–¢–µ–ª–µ–≤–∏–∑–æ—Ä", "MacBook", "DJI Osmo Pocket 3"],
    "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –ì–∞–¥–∂–µ—Ç—ã": ["iPad", "Google Pixel", "Samsung —Ç–µ–ª–µ—Ñ–æ–Ω", "Samsung –ø–ª–∞–Ω—à–µ—Ç", "Garmin —á–∞—Å—ã", "Kindle", "–ù–æ—É—Ç–±—É–∫", "–ü—Ä–∏–Ω—Ç–µ—Ä", "–í–∏–¥–µ–æ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "Air Fryer", "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", "GoPro", "Meta Quest", "Ray Ban Meta –æ—á–∫–∏", "Beats", "Shark", "Ring", "Nikon", "Canon", "Echo", "Fire TV", "Blink", "eero", "Power bank", "Steam Deck", "Razer"],
    "–ë—ã—Ç–æ–≤–∞—è –¢–µ—Ö–Ω–∏–∫–∞": ["–†–æ–±–æ—Ç –ø—ã–ª–µ—Å–æ—Å", "Roborock –ø—ã–ª–µ—Å–æ—Å", "Breville –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞", "Philips –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞", "DeLonghi –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞", "KitchenAid", "KENWOOD", "Instant pot", "–ö—Ä—É–ø–Ω–∞—è –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "–û—á–∏—Å—Ç–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞", "Ninja Creami", "Nespresso", "Lavazza", "–≠–ª–µ–∫—Ç—Ä–æ–±—Ä–∏—Ç–≤—ã", "Le Creuset", "Anova", "T-fal", "Braun", "Philips"],
    "–î–æ–º –∏ –°–∞–¥": ["Dewalt", "Makita", "–ì—Ä–∏–ª—å –≥–∞–∑–æ–≤—ã–π", "–ì—Ä–∏–ª—å –Ω–∞ —É–≥–ª—è—Ö", "–ö–æ–ø—Ç–∏–ª—å–Ω—è", "–ú–∞—Ç—Ä–∞—Å", "–ú–µ–±–µ–ª—å –¥–ª—è –¥–æ–º–∞", "–£–ª–∏—á–Ω–∞—è –º–µ–±–µ–ª—å", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä"],
    "–ú–æ–¥–∞ –∏ –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã": ["Nike", "Adidas", "New Balance", "Victoria's Secret", "Tiffany", "Puma", "Carhartt", "Michael Kors", "Timberland", "Polo Ralph Lauren", "Crocs", "UGG", "–ü–∞—Ä—Ñ—é–º–µ—Ä–∏—è", "Lancome", "–ß–µ–º–æ–¥–∞–Ω—ã"],
    "–î–µ—Ç–∏": ["Roblox", "Minecraft", "Play-Doh", "Bluey", "Barbie", "MARVEL", "LEGO", "LOL", "Hot Wheels", "Britax", "Graco Nuna", "Stokke", "Bugaboo", "–í—Å–µ –¥–ª—è –¥–µ—Ç–µ–π"],
"–ñ–∏–≤–æ—Ç–Ω—ã–µ": ["Litter Robot", "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö", "–ö–æ—Ä–º–∞", "–ù–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å"],
    "–†–∞–∑–Ω–æ–µ": ["Tide", "–†—é–∫–∑–∞–∫", "–ì–∏—Ñ—Ç –∫–∞—Ä—Ç—ã", "–¢–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ö–æ—Ç—ã", "Maybelline", "CeraVe", "Olay", "Revlon", "Laneige", "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑—É–±–Ω–∞—è —â–µ—Ç–∫–∞"],

};

// --- –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π CSS-—Ñ–∞–π–ª) ---
const styles = `
    .tag-animation { transition: all 0.2s ease-in-out; }
    .tag-selected { transform: translateY(-2px); }
    .tag-featured-selected { box-shadow: 0 4px 15px rgba(245, 158, 11, 0.5); }
    .tag-normal-selected { box-shadow: 0 4px 15px rgba(37, 99, 235, 0.4); }
    .tag-processing { cursor: wait; opacity: 0.7; }

    .modal-backdrop {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background-color: rgba(0, 0, 0, 0.6); display: flex;
        justify-content: center; align-items: center; z-index: 50;
        opacity: 0; visibility: hidden; transition: opacity 0.3s ease;
    }
    .modal-backdrop.visible { opacity: 1; visibility: visible; }
    .modal-content {
        transform: scale(0.9); transition: transform 0.3s ease;
    }
    .modal-backdrop.visible .modal-content { transform: scale(1); }
`;

// --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
const PrimeDayPage: React.FC = () => {
  const { user } = useAuth();
  const [loading, setLoading] = useState(true);
  const [userSubscriptions, setUserSubscriptions] = useState<Map<string, string>>(new Map());
  const [processingKeywords, setProcessingKeywords] = useState<Set<string>>(new Set());
  const [customKeyword, setCustomKeyword] = useState('');
  const [isAddingCustom, setIsAddingCustom] = useState(false);

  const [modalState, setModalState] = useState<{
      isOpen: boolean;
      title: string;
      message: string;
      type: 'success' | 'error' | 'info';
  }>({ isOpen: false, title: '', message: '', type: 'success' });

  // --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
  const loadSubscriptions = useCallback(async () => {
    if (!user) return;
    try {
      setLoading(true);
      const { data, error } = await supabase
        .from('user_keyword_subscriptions')
        .select('id, keyword')
        .eq('user_id', user.id);

      if (error) throw error;
      
      const subsMap = new Map(data.map(sub => [sub.keyword, sub.id]));
      setUserSubscriptions(subsMap);

    } catch (error) {
      console.error('Error loading subscriptions:', error);
      showModal('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏.', 'error');
    } finally {
      setLoading(false);
    }
  }, [user]);

  useEffect(() => {
    loadSubscriptions();
  }, [loadSubscriptions]);

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Ç–µ–≥—É (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ) ---
  const handleTagClick = async (keyword: string) => {
    if (!user || processingKeywords.has(keyword)) return;

    setProcessingKeywords(prev => new Set(prev).add(keyword));

    const isSubscribed = userSubscriptions.has(keyword);

    try {
      if (isSubscribed) {
        // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        const subscriptionId = userSubscriptions.get(keyword);
        const { error } = await supabase
          .from('user_keyword_subscriptions')
          .delete()
          .match({ id: subscriptionId, user_id: user.id });
        if (error) throw error;
        
        setUserSubscriptions(prev => {
          const newMap = new Map(prev);
          newMap.delete(keyword);
          return newMap;
        });

      } else {
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        const { data, error } = await supabase
          .from('user_keyword_subscriptions')
          .insert({ user_id: user.id, keyword: keyword })
          .select('id, keyword')
          .single();
        if (error) throw error;

        setUserSubscriptions(prev => new Map(prev).set(data.keyword, data.id));
      }
    } catch (error) {
      console.error('Error toggling subscription:', error);
      showModal('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
    } finally {
      setProcessingKeywords(prev => {
        const newSet = new Set(prev);
        newSet.delete(keyword);
        return newSet;
      });
    }
  };

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ ---
  const handleAddCustomKeyword = async () => {
    if (!user || !customKeyword.trim()) return;

    const keyword = customKeyword.trim();
    if (userSubscriptions.has(keyword)) {
      showModal('–£–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ', `–¢–æ–≤–∞—Ä "${keyword}" —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö.`, 'info');
      return;
    }
    
    setIsAddingCustom(true);
    await handleTagClick(keyword);
    setCustomKeyword('');
    setIsAddingCustom(false);
    showModal('–ì–æ—Ç–æ–≤–æ!', `–¢–æ–≤–∞—Ä "${keyword}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏.`, 'success');
  };
  
  // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º ---
  const showModal = (title: string, message: string, type: 'success' | 'error' | 'info' = 'success') => {
      setModalState({ isOpen: true, title, message, type });
  };
  
  const closeModal = () => {
      setModalState({ isOpen: false, title: '', message: '', type: 'success' });
  };

  // --- –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ---
  return (
    <>
      <style>{styles}</style>
      <div className="bg-gray-50 pt-[30px]">
        
        {/* –ó–û–ù–ê 1: –ì–ï–†–û–ô–°–ö–ò–ô –ë–õ–û–ö */}
        <div className="hero-section bg-gradient-to-br from-indigo-600 to-purple-600 text-white text-center py-8 sm:py-10 px-4">
            <div className="max-w-3xl mx-auto">
                <div className="inline-block bg-white/25 text-white font-bold rounded-full px-4 py-2 text-sm mb-4 shadow-lg">
                    <i className="fa-solid fa-calendar-check mr-2"></i>–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞: 8 ‚Äì 11 –∏—é–ª—è
                </div>
                <h1 className="text-4xl sm:text-5xl font-extrabold tracking-tight">–£–°–ü–ï–ô –ù–ê PRIME DAY!</h1>
                <p className="mt-4 text-lg text-indigo-200">–î–æ–±–∞–≤—å —Ç–æ–≤–∞—Ä—ã –≤ —Å–≤–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª—É—á—à–∏–µ —Ü–µ–Ω—ã.</p>
            </div>
        </div>

        {/* –ó–û–ù–ê 2: –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢ */}
        <div className="how-it-works-section bg-gray-100 py-10 sm:py-12 px-4">
            <div className="max-w-4xl mx-auto text-center">
                <h2 className="text-3xl font-bold text-gray-800 mb-8">–í—Å–µ–≥–æ 2 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-2xl mx-auto">
                    <div className="step">
                        <div className="flex items-center justify-center h-16 w-16 bg-blue-100 text-blue-600 rounded-full mx-auto mb-4"><FaHandPointer className="text-2xl" /></div>
                        <h3 className="text-xl font-semibold text-gray-800">1. –î–æ–±–∞–≤—å —Ç–æ–≤–∞—Ä—ã</h3>
                        <p className="text-gray-600 mt-2">–ü—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–Ω–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–æ–≤–∞—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.</p>
                    </div>
                    <div className="step">
                        <div className="flex items-center justify-center h-16 w-16 bg-blue-100 text-blue-600 rounded-full mx-auto mb-4"><FaRocket className="text-2xl" /></div>
                        <h3 className="text-xl font-semibold text-gray-800">2. –£—á–∞—Å—Ç–≤—É–π!</h3>
                        <p className="text-gray-600 mt-2">–ü–æ–ª—É—á–∏ email, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–∏—Ç—Å—è —Å–∫–∏–¥–∫–∞.</p>
                    </div>
                </div>
            </div>
        </div>

        {/* –ó–û–ù–ê 3: –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ */}
        <div className="main-content-section bg-white pt-10 sm:pt-12 px-4 pb-12 sm:pb-16">
            <div className="max-w-4xl w-full mx-auto">
              {loading ? (
                <div className="text-center py-10">
                  <FaSpinner className="h-10 w-10 text-blue-500 animate-spin mx-auto"/>
                  <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏...</p>
                </div>
              ) : (
                <>
                  <div className="space-y-10">
                    {Object.entries(productData).map(([category, items]) => {
                      const isFeatured = category.includes('üî•');
                      return (
                        <div key={category}>
                          <h2 className="text-2xl font-bold text-gray-800 mb-5">{category}</h2>
                          <div className="flex flex-wrap gap-3">
                            {items.map(item => {
                              const isSelected = userSubscriptions.has(item);
                              const isProcessing = processingKeywords.has(item);
                              
                              const baseClasses = "tag-animation cursor-pointer px-4 py-2 rounded-full font-medium border flex items-center gap-2";
                              const featuredClasses = isSelected ? "bg-amber-400 text-black border-amber-500 tag-selected tag-featured-selected" : "bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200";
                              const normalClasses = isSelected ? "bg-blue-600 text-white border-blue-600 tag-selected tag-normal-selected" : "bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200";
                              const processingClasses = "tag-processing bg-gray-200 text-gray-500";
                              
                              return (
                                <div
                                  key={item}
                                  onClick={() => handleTagClick(item)}
                                  className={`${baseClasses} ${isProcessing ? processingClasses : (isFeatured ? featuredClasses : normalClasses)}`}
                                >
                                  {isProcessing ? <FaSpinner className="animate-spin" /> : (isSelected ? <FaCheck /> : <FaPlus />)}
                                  <span>{item}</span>
                                </div>
                              );
                            })}
                          </div>
                        </div>
                      );
                    })}
                  </div>

                  <div className="extra-cta text-center bg-indigo-50 border-2 border-dashed border-indigo-200 p-6 rounded-xl mt-12">
                      <h3 className="text-xl font-semibold text-gray-800">–ù–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä?</h3>
                      <p className="text-gray-600 mt-2 mb-4">–ü—Ä–æ—Å—Ç–æ –≤–ø–∏—à–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏ –º—ã –¥–æ–±–∞–≤–∏–º –µ–≥–æ –≤ –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏!</p>
                      <div className="flex flex-col sm:flex-row gap-2 max-w-lg mx-auto">
                          <input 
                            type="text" 
                            value={customKeyword}
                            onChange={(e) => setCustomKeyword(e.target.value)}
                            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, GoPro 12" 
                            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                          />
                          <button 
                            onClick={handleAddCustomKeyword}
                            disabled={!customKeyword.trim() || isAddingCustom}
                            className="w-full sm:w-auto bg-blue-600 text-white font-bold px-6 py-3 rounded-lg shadow-md hover:bg-blue-700 transition duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center"
                          >
                            {isAddingCustom ? <FaSpinner className="animate-spin h-5 w-5"/> : '–î–æ–±–∞–≤–∏—Ç—å'}
                          </button>
                      </div>
                  </div>
                </>
              )}
            </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {modalState.isOpen && (
          <div className="modal-backdrop visible" onClick={closeModal}>
              <div className="modal-content bg-white p-6 rounded-lg shadow-xl" onClick={(e) => e.stopPropagation()}>
                  <h2 className="text-2xl font-bold text-gray-800 mb-2">{modalState.title}</h2>
                  <p className="text-gray-600 mb-6">{modalState.message}</p>
                  <button onClick={closeModal} className="bg-blue-500 text-white font-bold px-6 py-2 rounded-lg hover:bg-blue-600 transition">
                      –û—Ç–ª–∏—á–Ω–æ!
                  </button>
              </div>
          </div>
      )}
    </>
  );
};

export default PrimeDayPage;

