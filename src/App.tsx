// App.tsx (–í–ê–®–ï–ì–û –í–ï–ë-–°–ê–ô–¢–ê)
import React, { useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom'; // –î–æ–±–∞–≤–ª–µ–Ω useLocation
import ReactGA4 from 'react-ga4'; // –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω react-ga4

import { AuthProvider } from './contexts/AuthContext';
import { GlobalStateProvider } from './contexts/GlobalStateContext';
import { ThemeProvider } from './contexts/ThemeContext';
import { LanguageProvider } from './contexts/LanguageContext';
import { ModerationProvider } from './contexts/ModerationContext';
import './index.css';
import AppLayout from './components/layout/AppLayout';
import AuthPage from './pages/AuthPage';
import DealsPage from './pages/DealsPage';
import DealDetailPage from './pages/DealDetailPage';
import AddDealPage from './pages/AddDealPage';
import AddPromoPage from './pages/AddPromoPage';
import PromosPage from './pages/PromosPage';
import PromoDetailPage from './pages/PromoDetailPage';
import DiscussionsPage from './pages/DiscussionsPage';
import CategoriesPage from './pages/CategoriesPage';
import ProfilePage from './pages/ProfilePage';
import SavedItemsPage from './pages/SavedItemsPage';
import UserCommentsPage from './pages/UserCommentsPage';
import UserPostedItemsPage from './pages/UserPostedItemsPage';
import NotificationSettingsPage from './pages/NotificationSettingsPage';
import UserSettingsPage from './pages/UserSettingsPage';
import PrivateRoute from './components/PrivateRoute';
import AddDealPageNew from './pages/AddDealPageNew';
import EditDealPage from './pages/EditDealPage';
import EditDealCarouselPage from './pages/EditDealCarouselPage';
import EditPromoPage from './pages/EditPromoPage';
import CategoryItemsPage from './pages/CategoryItemsPage';
import AddSweepstakesPage from './pages/AddSweepstakesPage';
import SweepstakesDetailPage from './pages/SweepstakesDetailPage';
import SweepstakesPage from './pages/SweepstakesPage';
import EditSweepstakesPage from './pages/EditSweepstakesPage';
import ModerationPage from './pages/ModerationPage';
import ModerationSettingsPage from './pages/ModerationSettingsPage';
import PushNotificationAdminPage from './pages/PushNotificationAdminPage';
import UserSubscriptionsPage from './pages/UserSubscriptionsPage';
import SearchPage from './pages/SearchPage';
import FacebookDataDeletionPage from './pages/FacebookDataDeletionPage';
import PrivacyPolicyPage from './pages/PrivacyPolicyPage';
import PrimeDay from './pages/PrimeDay';
import initGlobalInteractions from './utils/globalInteractions';
import initWebViewConsole from './utils/webViewConsole';

import { supabase } from './lib/supabase';

// –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Measurement ID –¥–ª—è Google Analytics 4
const GA4_MEASUREMENT_ID = "G-N0VDTWZSBV";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GA4 –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
ReactGA4.initialize(GA4_MEASUREMENT_ID);

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü
const GAListener: React.FC = () => {
  const location = useLocation();

  useEffect(() => {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–π —Å–º–µ–Ω–µ URL
    // location.pathname - –ø—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, /deals/123)
    // location.search - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ?q=test)
    ReactGA4.send({ hitType: "pageview", page: location.pathname + location.search });
    console.log(`GA4: Pageview sent for ${location.pathname + location.search}`);
  }, [location]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç location –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL

  return null; // –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ –≤ DOM
};

function App() {
  useEffect(() => {
    const userAgent = window.navigator.userAgent.toLowerCase();
    const isWebView =
      userAgent.includes('wv') ||
      userAgent.includes('fbav') ||
      userAgent.includes('instagram') ||
      userAgent.includes('snapchat') ||
      (userAgent.includes('iphone') && !userAgent.includes('safari')) ||
      new URLSearchParams(window.location.search).has('embedded');

    if (isWebView) {
      document.body.classList.add('embedded-app');
    } else {
      document.body.classList.add('standalone-browser');
    }

    initGlobalInteractions();
    initWebViewConsole();

    (window as any).supabase = supabase;

    if ((window as any).ReactNativeWebViewFramework &&
        typeof (window as any).ReactNativeWebViewFramework.signalSupabaseReady === 'function') {
      console.log('[WEBSITE App.tsx] Signaling Supabase is ready to ReactNativeWebViewFramework.');
      (window as any).ReactNativeWebViewFramework.signalSupabaseReady();
    } else {
      console.warn('[WEBSITE App.tsx] ReactNativeWebViewFramework.signalSupabaseReady not found immediately. Setting a timeout to try again.');
      const timeoutId = setTimeout(() => {
        if ((window as any).ReactNativeWebViewFramework &&
            typeof (window as any).ReactNativeWebViewFramework.signalSupabaseReady === 'function') {
          console.log('[WEBSITE App.tsx] Signaling Supabase is ready to ReactNativeWebViewFramework (delayed attempt).');
          (window as any).ReactNativeWebViewFramework.signalSupabaseReady();
        } else {
          console.error('[WEBSITE App.tsx] ReactNativeWebViewFramework.signalSupabaseReady still not found after delay.');
        }
      }, 1500);
      return () => clearTimeout(timeoutId);
    }

    return () => {
      document.body.classList.remove('embedded-app', 'standalone-browser');
    };
  }, []);

return (
    <Router>
      <GAListener /> 

      <AuthProvider>
        <GlobalStateProvider>
          <ThemeProvider>
            <ModerationProvider>
              <LanguageProvider>
                <Routes>
                  {/* –ü–£–ë–õ–ò–ß–ù–´–ï –ë–ê–ó–û–í–´–ï –ú–ê–†–®–†–£–¢–´ (–±–µ–∑ AppLayout) */}
                  <Route path="/auth" element={<AuthPage />} />
                  <Route path="/auth/reset-password" element={<AuthPage isResetPasswordPage={true} />} />
                  <Route path="/auth/callback" element={<AuthPage />} />
                  <Route path="/privacy-policy" element={<PrivacyPolicyPage />} />
                  <Route path="/facebook-data-deletion" element={<FacebookDataDeletionPage />} />
                  
                  {/* –£–ë–ò–†–ê–ï–ú –°–¢–ê–†–´–ï –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –î–ï–¢–ê–õ–ï–ô –û–¢–°–Æ–î–ê
                  */}

                  {/* –ú–ê–†–®–†–£–¢–´, –ò–°–ü–û–õ–¨–ó–£–Æ–©–ò–ï –û–ë–©–ò–ô LAYOUT (AppLayout) */}
                  <Route element={<AppLayout />}>
                    {/* üëá –í–û–¢ –°–Æ–î–ê –ú–´ –ü–ï–†–ï–ú–ï–°–¢–ò–õ–ò –ú–ê–†–®–†–£–¢–´ –î–ï–¢–ê–õ–ï–ô üëá */}
                    <Route path="/promos/:id" element={<PromoDetailPage />} />
                    <Route path="/deals/:id" element={<DealDetailPage />} />
                    <Route path="/sweepstakes/:id" element={<SweepstakesDetailPage />} />
                    <Route path="/category/:categoryId" element={<CategoryItemsPage />} />

                    {/* –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∞—à–∏ –º–∞—Ä—à—Ä—É—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –∑–¥–µ—Å—å */}
                    <Route path="/" element={<DealsPage />} />
                    <Route path="/promos" element={<PromosPage />} />
                    <Route path="/sweepstakes" element={<SweepstakesPage />} />
                    {/* ... –∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∞—à–∏ –ø—É–±–ª–∏—á–Ω—ã–µ –∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã ... */}
                    <Route path="/discussions" element={<DiscussionsPage />} />
                    <Route path="/categories" element={<CategoriesPage />} />
                    <Route path="/search" element={<SearchPage />} />

                    <Route path="/deals/new" element={<PrivateRoute><AddDealPage /></PrivateRoute>} />
                    <Route path="/deals/new-carousel" element={<PrivateRoute><AddDealPageNew /></PrivateRoute>} />
                    <Route path="/edit-carousel/:id" element={<PrivateRoute><EditDealCarouselPage /></PrivateRoute>} />
                    <Route path="/promos/new" element={<PrivateRoute><AddPromoPage /></PrivateRoute>} />
                    <Route path="/promos/:id/edit" element={<PrivateRoute><EditPromoPage /></PrivateRoute>} />
                    <Route path="/sweepstakes/new" element={<PrivateRoute><AddSweepstakesPage /></PrivateRoute>} />
                    <Route path="/edit-deal/:id" element={<PrivateRoute><EditDealPage /></PrivateRoute>} />
                    <Route path="/edit-promo/:id" element={<PrivateRoute><EditPromoPage /></PrivateRoute>} />
                    <Route path="/edit-sweepstakes/:id" element={<PrivateRoute><EditSweepstakesPage /></PrivateRoute>} />
                    <Route path="/moderation" element={<PrivateRoute><ModerationPage /></PrivateRoute>} />
                    <Route path="/moderation/settings" element={<PrivateRoute><ModerationSettingsPage /></PrivateRoute>} />
                    <Route path="/admin/push-notifications" element={<PrivateRoute><PushNotificationAdminPage /></PrivateRoute>} />
                    <Route path="/user-subscriptions" element={<PrivateRoute><UserSubscriptionsPage /></PrivateRoute>} />
                    <Route path="/primeday" element={<PrivateRoute><PrimeDay /></PrivateRoute>} />
                    <Route path="/profile" element={<PrivateRoute><ProfilePage /></PrivateRoute>} />
                    <Route path="/saved" element={<PrivateRoute><SavedItemsPage /></PrivateRoute>} />
                    <Route path="/comments" element={<PrivateRoute><UserCommentsPage /></PrivateRoute>} />
                    <Route path="/posted" element={<PrivateRoute><UserPostedItemsPage /></PrivateRoute>} />
                    <Route path="/settings/notifications" element={<PrivateRoute><NotificationSettingsPage /></PrivateRoute>} />
                    <Route path="/user-settings" element={<PrivateRoute><UserSettingsPage /></PrivateRoute>} />
                  </Route>

                  {/* –ó–ê–ü–ê–°–ù–û–ô –ú–ê–†–®–†–£–¢ */}
                  <Route path="*" element={<Navigate to="/" replace />} />
                </Routes>
              </LanguageProvider>
            </ModerationProvider>
          </ThemeProvider>
        </GlobalStateProvider>
      </AuthProvider>
    </Router>
  );
}

export default App;